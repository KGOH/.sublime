[ ///////////////////// see .neovintageousrc
// {"keys":    [" ", " "],
//  "command": "show_overlay",
//  "args":    {"overlay": "command_palette"},
//  "context": [{"key": "my_vi_normal_mode"}]}
//
////,{"keys":    [" ", "e", "j"],
////  "command": "executor_execute_shell",
////  "args":    {"command": "echo 123"},
////  "context": [{"key": "my_vi_normal_mode"} 
////             ,{"key": "selector", "operator": "equal", "operand": "source.edn | source.clojure"} ]}
//
// {"keys": ["enter"], "command": "clojure_sublimed_insert_newline",
//  "context":
//  [{"key": "vi_insert_mode_aware"}
//  ,{"key": "selector",
//    "operator": "equal",
//    "operand": "source.edn | source.clojure"}
//  ,{"key": "auto_complete_visible", "operator": "equal", "operand": false}
//  ,{"key": "panel_has_focus", "operator": "equal", "operand": false}]}
  
{"keys": [" ", "p", "t"],
  "command": "toggle_sidebar_and_focus",
  "context": [{"key": "control", "operand": "sidebar_tree"}]}

// ,{"keys":    ["super+b"],
//   "command": "chain",
//   "args": {"commands":
//            [["my_write_free_repl_port"],
//             ["executor_execute_shell", {"command": "echo $(<.repl-port) && lein repl :headless :port $(<.repl-port)"}],
//             ["my_wait_for_repl"],
//             ["clojure_sublimed_connect_nrepl_raw", {"address": "auto"}]]},
//   "context": [{"key": "selector", "operator": "equal", "operand": "source.clojure"}]}  
,{"keys": ["("], "command": "paredit_open_round"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
,{"keys": [")"], "command": "paredit_close_round"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
,{"keys": ["["], "command": "paredit_open_square"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
,{"keys": ["]"], "command": "paredit_close_square"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
,{"keys": ["{"], "command": "paredit_open_curly"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
,{"keys": ["}"], "command": "paredit_close_curly"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
,{"keys": ["\""], "command": "paredit_doublequote"
 ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
////,{
////  "keys": ["ctrl+j"],
////  "command": "paredit_newline",
////  "context": [{"key": "should_paredit"}]
//// }
//
////// Deleting & killing
//,{"keys": ["delete"], "command": "paredit_forward_delete"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
//,{"keys": ["backspace"], "command": "paredit_backward_delete"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
//,{"keys": ["ctrl+k"], "command": "paredit_kill"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_insert_mode_aware"}]}
//,{"keys": ["D"], "command": "paredit_kill"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "d", "x"], "command": "paredit_kill_expression"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "d", "w"], "command": "paredit_forward_kill_word"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "d", "W"], "command": "paredit_backward_kill_word"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//
////// Depth-changing commands
//,{"keys": [" ", "k", "w", "w"], "command": "paredit_wrap_round"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_command_mode_aware"}]}
//,{"keys": [" ", "k", "w", "("], "command": "paredit_wrap_round"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_command_mode_aware"}]}
//,{"keys": [" ", "k", "w", "["], "command": "paredit_wrap_square"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_command_mode_aware"}]}
//,{"keys": [" ", "k", "w", "{"], "command": "paredit_wrap_curly"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_command_mode_aware"}]}
//,{"keys": [" ", "k", "w", "\""], "command": "paredit_meta_doublequote"
// ,"context": [{"key": "should_paredit"}, {"key": "vi_command_mode_aware"}]}
//,{"keys": [" ", "k", "W"], "command": "paredit_splice_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//
////// Barfage & slurpage
//,{"keys": [" ", "k", "s"], "command": "paredit_forward_slurp_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "b"], "command": "paredit_forward_barf_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "S"], "command": "paredit_backward_slurp_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "B"], "command": "paredit_backward_barf_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//
////// Miscellaneous commands
//,{"keys": [" ", "k", "f"], "command": "paredit_split_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
//,{"keys": [" ", "k", "j"], "command": "paredit_join_sexp"
// ,"context": [{"key": "should_paredit"}, {"key": "my_vi_normal_mode"}]}
  
//// Movement & navigation 
//,{
//  "keys": ["ctrl+alt+f"],
//  "command": "paredit_forward",
//  "context": [{"key": "should_paredit"}]
// }
//,{
//  "keys": ["ctrl+alt+b"],
//  "command": "paredit_backward",
//  "context": [{"key": "should_paredit"}]
// }
//,{
//  "keys": ["ctrl+alt+n"],
//  "command": "paredit_forward_up",
//  "context": [{"key": "should_paredit"}]
// }
//,{
//  "keys": ["ctrl+alt+d"],
//  "command": "paredit_forward_down",
//  "context": [{"key": "should_paredit"}]
// }
//,{
//  "keys": ["ctrl+alt+u"],
//  "command": "paredit_backward_up",
//  "context": [{"key": "should_paredit"}]
// }
//,{
//  "keys": ["ctrl+alt+p"],
//  "command": "paredit_backward_down",
//  "context": [{"key": "should_paredit"}]
// }

]